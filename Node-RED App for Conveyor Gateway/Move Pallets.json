[
    {
        "id": "1f25142fcb28f5c4",
        "type": "subflow",
        "name": "Wait until Related Device is Free",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "2da089056293aabb"
                    },
                    {
                        "id": "d74528dedb642bc4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 360,
                "wires": [
                    {
                        "id": "f9735256ea231083",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "cd07eaa5567c0ef6",
        "type": "delay",
        "z": "1f25142fcb28f5c4",
        "name": "Delay",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 270,
        "y": 260,
        "wires": [
            [
                "f9735256ea231083"
            ]
        ]
    },
    {
        "id": "5049daa4770b83f9",
        "type": "mqtt out",
        "z": "1f25142fcb28f5c4",
        "name": "Request to Lathe Module",
        "topic": "v1/devices/me/attributes/request/1",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5523fb5174c55576",
        "x": 870,
        "y": 120,
        "wires": []
    },
    {
        "id": "6a0ecd5c413cdf9c",
        "type": "mqtt out",
        "z": "1f25142fcb28f5c4",
        "name": "Request to Milling Module",
        "topic": "v1/devices/me/attributes/request/1",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "143cd6870fbb3152",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "e4e83fa7fec792e1",
        "type": "mqtt out",
        "z": "1f25142fcb28f5c4",
        "name": "Request to Control Module",
        "topic": "v1/devices/me/attributes/request/1",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a5cbe5a125a610b6",
        "x": 860,
        "y": 240,
        "wires": []
    },
    {
        "id": "d3621063ca76c3a4",
        "type": "mqtt out",
        "z": "1f25142fcb28f5c4",
        "name": "Request to Warehouse",
        "topic": "v1/devices/me/attributes/request/1",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7a78f3220c8b25fa",
        "x": 880,
        "y": 300,
        "wires": []
    },
    {
        "id": "2da089056293aabb",
        "type": "change",
        "z": "1f25142fcb28f5c4",
        "name": "Prepare Request",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"clientKeys\":\"isBusy\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 260,
        "wires": [
            [
                "b65f7e7bcbb8afc9"
            ]
        ]
    },
    {
        "id": "f9735256ea231083",
        "type": "function",
        "z": "1f25142fcb28f5c4",
        "name": "Check Device State",
        "func": "switch (msg.topic)\n{\n    case 0:\n        deviceState = global.get(\"is_lathe_module_busy\");\n        break;\n    case 1:\n        deviceState = global.get(\"is_milling_module_busy\");\n        break;\n    case 2:\n        deviceState = global.get(\"is_control_module_busy\");\n        break;\n    case 3:\n        deviceState = global.get(\"is_warehouse_busy\");\n        break;\n}\nif (deviceState === true)\nreturn [msg, null];\nelse\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 340,
        "wires": [
            [
                "cd07eaa5567c0ef6",
                "2da089056293aabb"
            ],
            []
        ]
    },
    {
        "id": "b65f7e7bcbb8afc9",
        "type": "switch",
        "z": "1f25142fcb28f5c4",
        "name": "Identify Sensor",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 520,
        "y": 160,
        "wires": [
            [
                "5049daa4770b83f9"
            ],
            [
                "6a0ecd5c413cdf9c"
            ],
            [
                "e4e83fa7fec792e1"
            ],
            [
                "d3621063ca76c3a4"
            ]
        ]
    },
    {
        "id": "d74528dedb642bc4",
        "type": "delay",
        "z": "1f25142fcb28f5c4",
        "name": "Delay",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 90,
        "y": 380,
        "wires": [
            [
                "f9735256ea231083"
            ]
        ]
    },
    {
        "id": "5523fb5174c55576",
        "type": "mqtt-broker",
        "name": "ThingsBoard Device \"Lathe Module\"",
        "broker": "45.8.230.87",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "143cd6870fbb3152",
        "type": "mqtt-broker",
        "name": "ThingsBoard Device \"Milling Module\"",
        "broker": "45.8.230.87",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a5cbe5a125a610b6",
        "type": "mqtt-broker",
        "name": "ThingsBoard Device \"Control Module\"",
        "broker": "45.8.230.87",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7a78f3220c8b25fa",
        "type": "mqtt-broker",
        "name": "ThingsBoard Device \"Warehouse\"",
        "broker": "45.8.230.87",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c2655b30449213aa",
        "type": "tab",
        "label": "Move Pallets",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "75cf48930746d362",
        "type": "mqtt in",
        "z": "c2655b30449213aa",
        "name": "Command \"Move Pallet\"",
        "topic": "v1/devices/me/rpc/request/+",
        "qos": "1",
        "datatype": "auto",
        "broker": "7d0ddbad1ea23174",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 60,
        "wires": [
            [
                "efb826250a20a310"
            ]
        ]
    },
    {
        "id": "efb826250a20a310",
        "type": "switch",
        "z": "c2655b30449213aa",
        "name": "Is Command Correct",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "move pallet",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 60,
        "wires": [
            [
                "236ba5efd6b88d07"
            ]
        ]
    },
    {
        "id": "09affd1357fd3414",
        "type": "function",
        "z": "c2655b30449213aa",
        "name": "Create Route",
        "func": "var command = msg.payload;\nvar startLock = command.params.from;\nvar finishLock = command.params.to;\nvar route = [];\nglobal.set(\"route\", [], \"file\");\nif (startLock < finishLock)\n{\n    for (var i = startLock; i <= finishLock; i++)\n    {\n        route.push(i);\n    }\n}\nelse\n{\n    var locksQuantity = flow.get(\"locks_quantity\", \"file\");\n    for (let i = startLock; i <= finishLock + locksQuantity; i++)\n    {\n        route.push(i%locksQuantity);\n    }\n}\nglobal.set(\"route\", route, \"file\");\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 220,
        "wires": [
            [
                "c0cc9247107d8298"
            ]
        ]
    },
    {
        "id": "c0cc9247107d8298",
        "type": "function",
        "z": "c2655b30449213aa",
        "name": "Allow Locks to Count Pallet Legs",
        "func": "var route = global.get(\"route\", \"file\").slice();\nif (route.length > 2)\n{\n    var routeWithoutBorders = route.splice(1, route.length-2);\n    for (var lock in routeWithoutBorders)\n    {\n        if (global.get(`sensor_${routeWithoutBorders[lock]}_readings`) === 1)\n        {\n            global.set(`is_counting_at_lock_${routeWithoutBorders[lock]}_allowed`, true);\n            var palletLegsCount = global.get(\"pallet_legs_counter\");\n            global.set(\"pallet_legs_counter\", palletLegsCount+1);\n            global.set(\"is_each_lock_on_path_free\", false);\n        }\n    }\n}\nmsg.payload = \"finish\";\nvar finishLock = route[route.length-1];\nif (global.get(`sensor_${finishLock}_readings`) === 0)\n{\n    if (!global.get(\"is_each_lock_on_path_free\"))\n    global.set(`is_counting_at_lock_${finishLock}_allowed`, true);\n    else\n    {\n        global.set(\"is_path_clearing_finished\", true);\n        return [null, msg];\n    }\n}\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 220,
        "wires": [
            [
                "86295e4a81c9ee7e"
            ],
            [
                "05f2c4b7aeaacf60"
            ]
        ]
    },
    {
        "id": "e37b0a34aef31f20",
        "type": "change",
        "z": "c2655b30449213aa",
        "name": "Start Execution",
        "rules": [
            {
                "t": "set",
                "p": "is_move_pallet_executed",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 140,
        "wires": [
            [
                "19b05ba7a6ddc42d",
                "09affd1357fd3414"
            ]
        ]
    },
    {
        "id": "86295e4a81c9ee7e",
        "type": "function",
        "z": "c2655b30449213aa",
        "name": "Get Lock ",
        "func": "var route = global.get(\"route\", \"file\").slice();\nswitch (msg.payload)\n{\n    case \"finish\":\n        msg.topic = route[route.length-1];\n        break;\n    case \"second-to-last\":\n        msg.topic = route[route.length-2];\n        break;\n    case \"second\":\n        msg.topic = route[1];\n        break;\n    case \"start\":\n        msg.topic = route[0];\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "ca9f8a99cf88a7bd"
            ]
        ]
    },
    {
        "id": "5d6f1afd38617a16",
        "type": "change",
        "z": "c2655b30449213aa",
        "name": "Send Opening Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"method\": \"switch lock\", \"params\": \"open\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 520,
        "wires": [
            [
                "2bb894ea2632c946"
            ]
        ]
    },
    {
        "id": "d2fbf982782c8fa2",
        "type": "subflow:1f25142fcb28f5c4",
        "z": "c2655b30449213aa",
        "name": "Wait until Related Device is Free",
        "env": [],
        "x": 190,
        "y": 500,
        "wires": [
            [
                "8ac2f2e04b4e4232"
            ]
        ]
    },
    {
        "id": "2bb894ea2632c946",
        "type": "link out",
        "z": "c2655b30449213aa",
        "name": "From \"Move Pallets\" 0",
        "mode": "link",
        "links": [
            "f8cd0babd32d1a43"
        ],
        "x": 975,
        "y": 520,
        "wires": []
    },
    {
        "id": "9c9863b5aee2d2bd",
        "type": "change",
        "z": "c2655b30449213aa",
        "name": "Send \"Pass Pallet\" Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"method\": \"pass pallet\", \"params\": {}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "976dfbc1633062b1"
            ]
        ]
    },
    {
        "id": "8ac2f2e04b4e4232",
        "type": "switch",
        "z": "c2655b30449213aa",
        "name": "Identify Route Place",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "finish",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "second-to-last",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "second",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 480,
        "y": 440,
        "wires": [
            [
                "12a98a93360f3011",
                "5d6f1afd38617a16"
            ],
            [
                "5d6f1afd38617a16",
                "12a98a93360f3011"
            ],
            [
                "5d6f1afd38617a16",
                "12a98a93360f3011"
            ],
            [
                "9c9863b5aee2d2bd"
            ]
        ]
    },
    {
        "id": "12a98a93360f3011",
        "type": "function",
        "z": "c2655b30449213aa",
        "name": "Get Next Route Place",
        "func": "switch (msg.payload)\n{\n    case \"finish\":\n        var route = global.get(\"route\", \"file\").slice();\n        if (route.length === 4)\n        msg.payload = \"second-to-last\";\n        else if (route.length === 3)\n        msg.payload = \"second\";\n        else\n        msg.payload = \"start\";\n        break;\n    case \"second-to-last\":\n        msg.payload = \"second\";\n        break;\n    case \"second\":\n        msg.payload = \"start\";\n        break;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 340,
        "wires": [
            [
                "86295e4a81c9ee7e"
            ]
        ]
    },
    {
        "id": "ca9f8a99cf88a7bd",
        "type": "function",
        "z": "c2655b30449213aa",
        "name": "Is Lock Busy",
        "func": "if (global.get(`sensor_${msg.topic}_readings`) === 1)\nreturn [null, msg];\nelse\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 400,
        "wires": [
            [
                "8ac2f2e04b4e4232"
            ],
            [
                "d2fbf982782c8fa2"
            ]
        ]
    },
    {
        "id": "236ba5efd6b88d07",
        "type": "json",
        "z": "c2655b30449213aa",
        "name": "JSON to Object",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 600,
        "y": 60,
        "wires": [
            [
                "8e814f7ea7f6124a"
            ]
        ]
    },
    {
        "id": "05f2c4b7aeaacf60",
        "type": "link out",
        "z": "c2655b30449213aa",
        "name": "From \"Allow Locks to Count Pallet Legs\"",
        "mode": "link",
        "links": [
            "5ebb2b6ec425aed9"
        ],
        "x": 575,
        "y": 240,
        "wires": []
    },
    {
        "id": "5ebb2b6ec425aed9",
        "type": "link in",
        "z": "c2655b30449213aa",
        "name": "To \"Get Next Route Place\"",
        "links": [
            "05f2c4b7aeaacf60"
        ],
        "x": 575,
        "y": 340,
        "wires": [
            [
                "12a98a93360f3011"
            ]
        ]
    },
    {
        "id": "8e814f7ea7f6124a",
        "type": "function",
        "z": "c2655b30449213aa",
        "name": "Is Start Lock Free",
        "func": "var command = msg.payload;\nvar startLock = command.params.from;\nif (global.get(`sensor_${startLock}_readings`) === 1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 140,
        "wires": [
            [
                "e37b0a34aef31f20"
            ]
        ]
    },
    {
        "id": "19b05ba7a6ddc42d",
        "type": "change",
        "z": "c2655b30449213aa",
        "name": "Update Command Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"isMovePalletExecuted\": true}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "9d2a0937d3b136be"
            ]
        ]
    },
    {
        "id": "9d2a0937d3b136be",
        "type": "mqtt out",
        "z": "c2655b30449213aa",
        "name": "New Status to ThingsBoard",
        "topic": "v1/devices/me/attributes",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7d0ddbad1ea23174",
        "x": 880,
        "y": 60,
        "wires": []
    },
    {
        "id": "976dfbc1633062b1",
        "type": "link out",
        "z": "c2655b30449213aa",
        "name": "From \"Move Pallets\" 1",
        "mode": "link",
        "links": [
            "a58f1e53d99300d9"
        ],
        "x": 975,
        "y": 560,
        "wires": []
    },
    {
        "id": "b2c446c9342bb9b7",
        "type": "inject",
        "z": "c2655b30449213aa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "107c6c455e13056a",
        "type": "inject",
        "z": "c2655b30449213aa",
        "name": "Start Initialization",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "d4e26d4ee1edbee7"
            ]
        ]
    },
    {
        "id": "d4e26d4ee1edbee7",
        "type": "change",
        "z": "c2655b30449213aa",
        "name": "Set Initial Context",
        "rules": [
            {
                "t": "set",
                "p": "is_counting_at_lock_0_allowed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "is_counting_at_lock_1_allowed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "is_counting_at_lock_2_allowed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "is_counting_at_lock_3_allowed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "is_each_lock_on_path_free",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "is_move_pallet_executed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "is_path_clearing_finished",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pallet_legs_counter",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "is_each_lock_on_path_free",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "7d0ddbad1ea23174",
        "type": "mqtt-broker",
        "name": "ThingsBoard Device \"Conveyor\"",
        "broker": "45.8.230.87",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]